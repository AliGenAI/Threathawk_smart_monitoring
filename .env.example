# =====================================================
# Wazuh MCP Server Environment Configuration
# =====================================================
# 
# IMPORTANT: Security Instructions
# --------------------------------
# 1. Copy this file to create your local configuration:
#    Linux/Mac: cp .env.example .env
#    Windows:   copy .env.example .env
#
# 2. NEVER commit .env file to Git!
#    - .env is already in .gitignore
#    - .env.example is safe to commit (contains no secrets)
#    - Check: git status (should not show .env)
#
# 3. Keep your .env file secure:
#    - Set file permissions: chmod 600 .env (Linux/Mac)
#    - Don't share or expose your credentials
#    - Use different credentials for dev/staging/prod
#
# 4. For production:
#    - Use strong passwords
#    - Enable SSL verification
#    - Rotate credentials regularly
#    - Consider using secrets management tools
# =====================================================

# -----------------------------------------------------
# WAZUH SERVER API CONFIGURATION (Required)
# -----------------------------------------------------
# Your Wazuh manager connection details for Server API
# Find these in your Wazuh deployment configuration

# Wazuh Server API endpoint host (IP or domain)
# Examples: 192.168.1.100, wazuh.company.com, localhost
WAZUH_HOST=localhost

# Wazuh Server API port (default: 55000)
WAZUH_PORT=55000

# Wazuh Server API credentials
# Create a dedicated API user with minimal required permissions
# DO NOT use the default admin account in production
WAZUH_USER=admin
WAZUH_PASS=admin

# SSL/TLS verification - DEFAULTS TO FALSE FOR EASY SETUP
# ‚ö° Quick Start: Leave as 'false' for immediate compatibility with any certificate type
# üîí Production: Set to 'true' only if you have commercial/CA-signed certificates
# ‚úÖ Works with: Self-signed, internal CA, commercial, and development certificates
VERIFY_SSL=false

# Advanced SSL/TLS Configuration (Optional)
# Custom CA bundle path for certificate verification
# WAZUH_CA_BUNDLE_PATH=/path/to/ca-bundle.pem

# Client certificate authentication (Optional)
# WAZUH_CLIENT_CERT_PATH=/path/to/client.crt
# WAZUH_CLIENT_KEY_PATH=/path/to/client.key

# Allow self-signed certificates - ENABLED BY DEFAULT
# ‚úÖ Recommended: Leave as 'true' for maximum compatibility
# üöÄ This allows connection to ANY Wazuh installation regardless of certificate type
WAZUH_ALLOW_SELF_SIGNED=true

# SSL connection timeout in seconds
# WAZUH_SSL_TIMEOUT=30

# Wazuh API version (default: v4)
# Check your Wazuh version: GET https://your-wazuh:55000/
WAZUH_API_VERSION=v4

# -----------------------------------------------------
# WAZUH INDEXER API CONFIGURATION (Required for 4.8.0+)
# -----------------------------------------------------
# Wazuh Indexer (OpenSearch/Elasticsearch) settings
# Required for alerts and vulnerabilities in Wazuh 4.8.0+

# Wazuh Indexer host (can be same as WAZUH_HOST)
# If not set, will use WAZUH_HOST as fallback
WAZUH_INDEXER_HOST=localhost

# Wazuh Indexer port (default: 9200)
WAZUH_INDEXER_PORT=9200

# Wazuh Indexer credentials (often same as dashboard login)
# If not set, will use WAZUH_USER/WAZUH_PASS as fallback
WAZUH_INDEXER_USER=admin
WAZUH_INDEXER_PASS=admin

# Indexer SSL verification - DEFAULTS TO FALSE FOR EASY SETUP
# ‚ö° Quick Start: Leave as 'false' for immediate compatibility
# üìù Note: Inherits from VERIFY_SSL if not set
WAZUH_INDEXER_VERIFY_SSL=false

# Advanced SSL/TLS Configuration for Indexer (Optional)
# Custom CA bundle path for indexer certificate verification
# WAZUH_INDEXER_CA_BUNDLE_PATH=/path/to/indexer-ca-bundle.pem

# Client certificate authentication for indexer (Optional)
# WAZUH_INDEXER_CLIENT_CERT_PATH=/path/to/indexer-client.crt
# WAZUH_INDEXER_CLIENT_KEY_PATH=/path/to/indexer-client.key

# Allow self-signed certificates for indexer - ENABLED BY DEFAULT  
# ‚úÖ Recommended: Leave as 'true' for maximum compatibility
# üöÄ This allows connection to ANY Wazuh Indexer regardless of certificate type
WAZUH_INDEXER_ALLOW_SELF_SIGNED=true

# -----------------------------------------------------
# WAZUH VERSION & API BEHAVIOR
# -----------------------------------------------------
# Wazuh version (auto-detected if not set)
# Examples: 4.7.2, 4.8.0, 4.9.0
# WAZUH_VERSION=4.8.0

# Use Indexer API for alerts (default: true for 4.8.0+)
USE_INDEXER_FOR_ALERTS=true

# Use Indexer API for vulnerabilities (default: true for 4.8.0+)
USE_INDEXER_FOR_VULNERABILITIES=true

# -----------------------------------------------------
# EXTERNAL API KEYS (Optional but Recommended)
# -----------------------------------------------------
# These enable threat intelligence lookups
# Leave empty to disable external lookups

# VirusTotal API Key
# Get free key: https://www.virustotal.com/gui/my-apikey
# Usage: File hash reputation, malware detection
# Rate limit: 4 requests/minute (free tier)
VIRUSTOTAL_API_KEY=

# Shodan API Key
# Get key: https://account.shodan.io/
# Usage: IP reconnaissance, exposure assessment
# Rate limit: 1 request/second
SHODAN_API_KEY=

# AbuseIPDB API Key
# Get free key: https://www.abuseipdb.com/api
# Usage: IP reputation, abuse reports
# Rate limit: 1000 requests/day (free tier)
ABUSEIPDB_API_KEY=

# -----------------------------------------------------
# SERVER CONFIGURATION
# -----------------------------------------------------

# Debug mode (set to false in production)
# Enables verbose logging to stderr
DEBUG=false

# MCP server port (for future use)
MCP_SERVER_PORT=8000

# Logging level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# -----------------------------------------------------
# PERFORMANCE SETTINGS
# -----------------------------------------------------

# Maximum alerts to retrieve per query
# Higher values = more memory usage
MAX_ALERTS_PER_QUERY=1000

# Maximum agents to scan for vulnerabilities
# Limits concurrent API calls
MAX_AGENTS_PER_SCAN=10

# Cache TTL in seconds (5 minutes default)
# Reduces API calls for repeated queries
CACHE_TTL_SECONDS=300

# API request timeout in seconds
REQUEST_TIMEOUT_SECONDS=30

# Maximum concurrent API connections
MAX_CONNECTIONS=10

# Connection pool size
POOL_SIZE=5

# -----------------------------------------------------
# FEATURE FLAGS
# -----------------------------------------------------
# Enable/disable specific features

# Use external threat intelligence APIs
ENABLE_EXTERNAL_INTEL=true

# Enable ML-based analysis features
ENABLE_ML_ANALYSIS=true

# Enable compliance checking features
ENABLE_COMPLIANCE_CHECKING=true

# Enable experimental features
ENABLE_EXPERIMENTAL=false

# -----------------------------------------------------
# DOCKER CONFIGURATION (when using Docker)
# -----------------------------------------------------

# User ID for container (security best practice)
# PUID=1000
# PGID=1000

# Timezone for log timestamps
# TZ=America/New_York

# -----------------------------------------------------
# ADVANCED CONFIGURATION
# -----------------------------------------------------

# Custom Wazuh API endpoints (leave empty for defaults)
# WAZUH_ALERTS_ENDPOINT=/alerts
# WAZUH_AGENTS_ENDPOINT=/agents

# Proxy configuration (if behind corporate proxy)
# HTTP_PROXY=http://proxy.company.com:8080
# HTTPS_PROXY=http://proxy.company.com:8080
# NO_PROXY=localhost,127.0.0.1

# Custom CA certificate path (for SSL verification)
# CA_CERT_PATH=/path/to/ca-cert.pem

# Rate limiting (requests per minute)
# RATE_LIMIT_PER_MINUTE=60

# -----------------------------------------------------
# MONITORING & ALERTING (Future Features)
# -----------------------------------------------------

# Webhook for critical alerts
# WEBHOOK_URL=https://hooks.slack.com/services/xxx/yyy/zzz

# Email notifications
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=alerts@company.com
# SMTP_PASS=smtp-password
# ALERT_EMAIL=security-team@company.com

# =====================================================
# NOTES:
# =====================================================
# 
# 1. Environment Variable Priority:
#    - System environment variables override .env file
#    - .env file overrides defaults in code
#    - Docker Compose env overrides .env file
#
# 2. Validation:
#    - Run: python scripts/test_connection.py
#    - This will verify your configuration
#
# 3. Troubleshooting:
#    - Enable DEBUG=true for detailed logs
#    - Check logs: docker-compose logs (if using Docker)
#    - Verify network connectivity to Wazuh
#
# 4. Security Checklist:
#    [ ] Changed default passwords
#    [ ] SSL configured (verification disabled by default for compatibility)
#    [ ] Set appropriate file permissions
#    [ ] Using dedicated API user (not admin)
#    [ ] API keys are kept secret
#    [ ] Regular credential rotation planned
#
# 5. SSL Configuration Notes:
#    ‚úÖ By default, SSL verification is DISABLED for maximum compatibility
#    ‚úÖ Self-signed certificates are ALLOWED by default
#    üöÄ This means the MCP server will work with ANY Wazuh installation
#    üîí For production: Enable SSL verification only if you have proper certificates
#    üìù No certificate configuration needed for most installations
#
# =====================================================
